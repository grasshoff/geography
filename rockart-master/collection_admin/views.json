{
  "_id": "_design/browse",
  "language": "javascript",
  "views": {
    "docs_by_type": {
      "map": "function(doc) {\n    if (!doc.type) return;\n\n    emit(doc.type, doc);\n}"
    },
    "obj_by_id": {
      "map": "function(doc) {\n    if (!doc.type || doc.type != 'ro') return;\n\n    emit(doc.id, doc);\n}"
    },
    "full_obj_by_id": {
      "map": "function(doc) {\n  if (doc.type == \"ro\") {\n    emit([doc.id, \"ro\"], null);}\n}"
    },
    "hierarchy_filter": {
        "map": "function(doc) {\n if (!doc.type || (doc.type != 'sci' && doc.type != 'ro')){\n  return;\n }\n \n var title = '';\n if (doc.title){\n  title = doc.title;\n } else if (doc.description){\n  title = doc.description;\n }\n \n for (hierarchyNr in doc.hierarchy_entries){\n  var hierarchyString=doc.hierarchy_entries[hierarchyNr];\n  var hierarchyEntries = hierarchyString.split(';');\n  var cleanedhierarchyEntries = \"\";\n  var criterion = \"\";\n\n  for (entryNr in hierarchyEntries){\n   var entry=hierarchyEntries[entryNr];\n   if (entry.length>0){\n    criterion = cleanedhierarchyEntries;\n    cleanedhierarchyEntries += entry;\n   }\n  }\n  \n  emit([criterion, cleanedhierarchyEntries], doc.id);\n }\n \n for (citableTyp in doc.scis){\n  emit([\"has_\"+citableTyp, 1], doc.id);\n }\n  \n}"
    },
    "hierarchy_preview": {
        "map": "function(doc) {\n    if (!doc.type || doc.type != 'ro') return;\n\n    emit(doc.id, {\"id\": doc.id, \"title\": doc.title, \"subtitle\": doc.subtitle, \"thumb\": [doc.thumb_baseurl, doc.thumb_file]});\n}"
    },
    "obj_ids": {
        "map": "function(doc) {\n    if (!doc.type || doc.type != 'ro') return;\n\n    emit(doc.id, doc.id);\n}"
    },
    "get_notebooks": {
        "map": "function(doc) {\n    if (doc.objecttype) { emit(doc.id,doc.title);\n} }"
    }
  }
}